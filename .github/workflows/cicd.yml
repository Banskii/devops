name: CI/CD Pipeline

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main


jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

      # 2. Set up Docker Buildx (Optional, for advanced Docker features)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

      # 3. Login to Docker Hub (optional if you're using Docker Hub)
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}

      # 4. Build and push the Docker image
    - name: Build and push Node.js app Docker image
      uses: docker/build-push-action@v3
      with:
        context: .  # Use the current directory (where the Dockerfile is)
        push: true  # Push the image to Docker Hub
        tags: ${{ secrets.USERNAME }}/myapp:latest  # Change the app name here

      # 5. Deploy to EC2 using SSH and Docker Compose
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH }}
        script: |
          cd /user-mgmt-service
          git pull origin main  # Pull the latest changes
          docker-compose down   # Stop any existing containers
          docker-compose pull   # Pull the updated Docker images
          docker-compose up -d  # Start containers in detached mode
